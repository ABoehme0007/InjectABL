<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit packageName="OpenEdge.InjectABL.Binding.Parameters" className="Parameter" isAbstract="false" isFinal="false" isInterface="false">
    <interfaces>IParameter</interfaces>
    <classComment>/** ****************************************************************************&#xD;
  Copyright 2012 Progress Software Corporation&#xD;
  &#xD;
  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#xD;
  you may not use this file except in compliance with the License.&#xD;
  You may obtain a copy of the License at&#xD;
  &#xD;
    http://www.apache.org/licenses/LICENSE-2.0&#xD;
  &#xD;
  Unless required by applicable law or agreed to in writing, software&#xD;
  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#xD;
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xD;
  See the License for the specific language governing permissions and&#xD;
  limitations under the License.&#xD;
**************************************************************************** **/</classComment>
    <classComment>/** ------------------------------------------------------------------------&#xD;
    File        : Parameter&#xD;
    Purpose     : Constructor, method or property parameter/argument class for&#xD;
                  dependency injection.&#xD;
    Syntax      : &#xD;
    Description : &#xD;
    @author pjudge&#xD;
    Created     : Tue Mar 02 16:03:46 EST 2010&#xD;
    Notes       : &#xD;
  ---------------------------------------------------------------------- */</classComment>
    <constructor signature="Parameter(INPUT:character)" modifier="PUBLIC">
        <constrComment>/* Primitive value constructors */</constrComment>
        <parameter name="pcValue" dataType="CHARACTER" position="8" mode="INPUT"/>
    </constructor>
    <constructor signature="Parameter(INPUT:character[])" modifier="PUBLIC">
        <parameter name="pcValue" dataType="CHARACTER" position="9" mode="INPUT"/>
    </constructor>
    <constructor signature="Parameter(INPUT:character,INPUT:DataTypeEnum)" modifier="PUBLIC">
        <parameter name="pcValue" dataType="CHARACTER" position="10" mode="INPUT"/>
        <parameter name="poDataType" dataType="DataTypeEnum" position="11" mode="INPUT"/>
    </constructor>
    <constructor signature="Parameter(INPUT:character[],INPUT:DataTypeEnum)" modifier="PUBLIC">
        <parameter name="pcValue" dataType="CHARACTER" position="12" mode="INPUT"/>
        <parameter name="poDataType" dataType="DataTypeEnum" position="13" mode="INPUT"/>
    </constructor>
    <constructor signature="Parameter(INPUT:Object)" modifier="PUBLIC">
        <constrComment>/* Object value constructors */</constrComment>
        <parameter name="poValue" dataType="Object" position="14" mode="INPUT"/>
    </constructor>
    <constructor signature="Parameter(INPUT:Object,INPUT:Progress.Lang.Class)" modifier="PUBLIC">
        <parameter name="poValue" dataType="Object" position="15" mode="INPUT"/>
        <parameter name="poDeclaredType" dataType="Progress.Lang.Class" position="16" mode="INPUT"/>
    </constructor>
    <constructor signature="Parameter(INPUT:Object[])" modifier="PUBLIC">
        <parameter name="poValue" dataType="Object" position="17" mode="INPUT"/>
    </constructor>
    <constructor signature="Parameter(INPUT:Object[],INPUT:Progress.Lang.Class)" modifier="PUBLIC">
        <parameter name="poValue" dataType="Object" position="18" mode="INPUT"/>
        <parameter name="poDeclaredType" dataType="Progress.Lang.Class" position="19" mode="INPUT"/>
    </constructor>
    <constructor signature="Parameter(INPUT:Progress.Lang.Class)" modifier="PUBLIC">
        <constrComment>/* Class (service or value) constructors */</constrComment>
        <parameter name="poType" dataType="Progress.Lang.Class" position="20" mode="INPUT"/>
    </constructor>
    <constructor signature="Parameter(INPUT:Progress.Lang.Class,INPUT:character)" modifier="PUBLIC">
        <parameter name="poType" dataType="Progress.Lang.Class" position="21" mode="INPUT"/>
        <parameter name="pcInstanceName" dataType="CHARACTER" position="22" mode="INPUT"/>
    </constructor>
    <constructor signature="Parameter(INPUT:Progress.Lang.Class,INPUT:DataTypeEnum)" modifier="PUBLIC">
        <parameter name="poType" dataType="Progress.Lang.Class" position="23" mode="INPUT"/>
        <parameter name="poDataType" dataType="DataTypeEnum" position="24" mode="INPUT"/>
    </constructor>
    <constructor signature="Parameter(INPUT:Progress.Lang.Class,INPUT:DataTypeEnum,INPUT:character)" modifier="PUBLIC">
        <parameter name="poType" dataType="Progress.Lang.Class" position="25" mode="INPUT"/>
        <parameter name="poDataType" dataType="DataTypeEnum" position="26" mode="INPUT"/>
        <parameter name="pcServiceInstanceName" dataType="CHARACTER" position="27" mode="INPUT"/>
    </constructor>
    <constructor signature="Parameter(INPUT:Progress.Lang.Class[])" modifier="PUBLIC">
        <parameter name="poType" dataType="Progress.Lang.Class" position="28" mode="INPUT"/>
    </constructor>
    <constructor signature="Parameter(INPUT:Progress.Lang.Class[],INPUT:DataTypeEnum)" modifier="PUBLIC">
        <parameter name="poType" dataType="Progress.Lang.Class" position="29" mode="INPUT"/>
        <parameter name="poDataType" dataType="DataTypeEnum" position="30" mode="INPUT"/>
    </constructor>
    <method methodName="GetValue" signature="GetValue(INPUT:ILifecycleContext,OUTPUT:Object)" modifier="PUBLIC" isStatic="false" isFinal="false" isAbstract="false">
        <parameter name="poContext" dataType="ILifecycleContext" position="0" mode="INPUT"/>
        <parameter name="poValue" dataType="Object" position="1" mode="OUTPUT"/>
    </method>
    <method methodName="GetValue" signature="GetValue(INPUT:ILifecycleContext,OUTPUT:Object[])" modifier="PUBLIC" isStatic="false" isFinal="false" isAbstract="false">
        <parameter name="poContext" dataType="ILifecycleContext" position="2" mode="INPUT"/>
        <parameter name="poValue" dataType="Object" position="3" mode="OUTPUT"/>
    </method>
    <method methodName="GetValue" signature="GetValue(INPUT:ILifecycleContext,OUTPUT:character)" modifier="PUBLIC" isStatic="false" isFinal="false" isAbstract="false">
        <parameter name="poContext" dataType="ILifecycleContext" position="4" mode="INPUT"/>
        <parameter name="pcValue" dataType="CHARACTER" position="5" mode="OUTPUT"/>
    </method>
    <method methodName="GetValue" signature="GetValue(INPUT:ILifecycleContext,OUTPUT:character[])" modifier="PUBLIC" isStatic="false" isFinal="false" isAbstract="false">
        <parameter name="poContext" dataType="ILifecycleContext" position="6" mode="INPUT"/>
        <parameter name="pcValue" dataType="CHARACTER" position="7" mode="OUTPUT"/>
    </method>
    <property name="Name" dataType="CHARACTER" isAbstract="false" isStatic="false" extent="0" modifier="PUBLIC" getModifier="PUBLIC" setModifier="PUBLIC">
        <propertyComment>/** (optional) Gets the name of the parameter. Only informational.*/</propertyComment>
    </property>
    <property name="ServiceInstanceName" dataType="CHARACTER" isAbstract="false" isStatic="false" extent="0" modifier="PUBLIC" getModifier="PUBLIC" setModifier="PUBLIC">
        <propertyComment>/** (optional) Gets the instance name of the parameter value. This is only used when the parameter&#xD;
        is a type/class which InjectABL will resolves from a pre-existing binding. The parameter &#xD;
        might be a general interface (IDataAccess) but the binding will specify a name (&quot;EmployeeDA&quot;);&#xD;
        this property allows us to specify that object.&#xD;
        &#xD;
        Note that this is only valid for scalar arguments, not vectors/arrays.  */</propertyComment>
    </property>
    <property name="DataType" dataType="DataTypeEnum" isAbstract="false" isStatic="false" extent="0" modifier="PUBLIC" getModifier="PUBLIC" setModifier="PRIVATE">
        <propertyComment>/** (mandatory) The datatype of the parameter. */</propertyComment>
    </property>
    <property name="DeclaredType" dataType="Progress.Lang.Class" isAbstract="false" isStatic="false" extent="0" modifier="PUBLIC" getModifier="PUBLIC" setModifier="PRIVATE">
        <propertyComment>/** (mandatory) Specify a declared type for cases where the parameter an object or array&#xD;
        thereof. ABL doesn't currently (10.2B) allow us to discover either the declared type&#xD;
        of the array, or the signature of the callee (method, property, ctor), and so we need&#xD;
        to specify the type for the InjectABL kernel. */</propertyComment>
    </property>
    <using name="OpenEdge.InjectABL.Binding.Parameters.IParameter" type="NONE"/>
    <using name="OpenEdge.InjectABL.Lifecycle.ILifecycleContext" type="NONE"/>
    <using name="OpenEdge.Core.System.InvalidValueSpecifiedError" type="NONE"/>
    <using name="OpenEdge.Core.System.InvalidCallError" type="NONE"/>
    <using name="OpenEdge.Core.System.ArgumentError" type="NONE"/>
    <using name="OpenEdge.Core.RoutineTypeEnum" type="NONE"/>
    <using name="OpenEdge.Core.DataTypeEnum" type="NONE"/>
    <using name="OpenEdge.Core.Assert" type="NONE"/>
    <using name="Progress.Lang.Class" type="NONE"/>
    <using name="Progress.Lang.Object" type="NONE"/>
</unit>
