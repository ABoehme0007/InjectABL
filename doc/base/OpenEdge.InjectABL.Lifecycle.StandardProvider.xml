<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit packageName="OpenEdge.InjectABL.Lifecycle" className="StandardProvider" isAbstract="false" isFinal="false" isInterface="false">
    <interfaces>IProvider</interfaces>
    <classComment>/** ****************************************************************************&#xD;
  Copyright 2012 Progress Software Corporation&#xD;
  &#xD;
  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#xD;
  you may not use this file except in compliance with the License.&#xD;
  You may obtain a copy of the License at&#xD;
  &#xD;
    http://www.apache.org/licenses/LICENSE-2.0&#xD;
  &#xD;
  Unless required by applicable law or agreed to in writing, software&#xD;
  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#xD;
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xD;
  See the License for the specific language governing permissions and&#xD;
  limitations under the License.&#xD;
**************************************************************************** **/</classComment>
    <classComment>/** ------------------------------------------------------------------------&#xD;
    File        : StandardProvider&#xD;
    Purpose     : &#xD;
    Syntax      : &#xD;
    Description : &#xD;
    @author pjudge&#xD;
    Created     : Tue Mar 02 16:41:44 EST 2010&#xD;
    Notes       : * We need to catch certain P.L.SysErrors since we don't&#xD;
                    know in advance what the callees' signatures are, and so&#xD;
                    we shoot and hope. And catch SysErrors based on number.&#xD;
                    This catch allows us to handle these conditions gracefully,&#xD;
                    which is what we would do if we could determine the callee&#xD;
                    signatures in advance. &#xD;
  ---------------------------------------------------------------------- */</classComment>
    <constructor signature="StandardProvider(INPUT:Progress.Lang.Class)" modifier="PUBLIC">
        <parameter name="poClass" dataType="Progress.Lang.Class" position="0" mode="INPUT"/>
    </constructor>
    <constructor signature="StandardProvider()" modifier="STATIC"/>
    <method methodName="InjectViaMethod" signature="InjectViaMethod(INPUT:Object,INPUT:Routine,INPUT:ILifecycleContext)" modifier="PROTECTED" isStatic="false" isFinal="false" isAbstract="false">
        <comment>/** Method injection **/</comment>
        <parameter name="poInstance" dataType="Object" position="1" mode="INPUT"/>
        <parameter name="poMethod" dataType="Routine" position="2" mode="INPUT"/>
        <parameter name="poContext" dataType="ILifecycleContext" position="3" mode="INPUT"/>
    </method>
    <method methodName="Create" returnType="Object" signature="Create(INPUT:ILifecycleContext):Object" modifier="PUBLIC" isStatic="false" isFinal="false" isAbstract="false">
        <comment>/** Constructor injection &#xD;
    &#xD;
        At some point in the future, we may add a generic/dynamic constructor injection &#xD;
        strategy, which will determine which constructor to use. At the moment, this decision&#xD;
        is based on the first constructor in the bindings with the most arguments, and attempts&#xD;
        to invoke an object with those arguments. &#xD;
        &#xD;
        @param ILifecycleContext The context for creating an object.&#xD;
        @return Object The newly-created object         */</comment>
        <parameter name="poContext" dataType="ILifecycleContext" position="5" mode="INPUT"/>
    </method>
    <method methodName="InjectMethods" signature="InjectMethods(INPUT:Object,INPUT:ILifecycleContext)" modifier="PUBLIC" isStatic="false" isFinal="false" isAbstract="false">
        <parameter name="poInstance" dataType="Object" position="7" mode="INPUT"/>
        <parameter name="poContext" dataType="ILifecycleContext" position="8" mode="INPUT"/>
    </method>
    <method methodName="InjectProperties" signature="InjectProperties(INPUT:Object,INPUT:ILifecycleContext)" modifier="PUBLIC" isStatic="false" isFinal="false" isAbstract="false">
        <parameter name="poInstance" dataType="Object" position="9" mode="INPUT"/>
        <parameter name="poContext" dataType="ILifecycleContext" position="10" mode="INPUT"/>
    </method>
    <method methodName="SetPropertyValue" signature="SetPropertyValue(INPUT:Object,INPUT:ILifecycleContext,INPUT:character,INPUT:IParameter)" modifier="PROTECTED" isStatic="false" isFinal="false" isAbstract="false">
        <parameter name="poInstance" dataType="Object" position="12" mode="INPUT"/>
        <parameter name="poContext" dataType="ILifecycleContext" position="13" mode="INPUT"/>
        <parameter name="pcPropertyName" dataType="CHARACTER" position="14" mode="INPUT"/>
        <parameter name="poArgument" dataType="IParameter" position="15" mode="INPUT"/>
    </method>
    <method methodName="SetParameterValue" signature="SetParameterValue(INPUT:ILifecycleContext,INPUT:Progress.Lang.ParameterList,INPUT:integer,INPUT:IParameter)" modifier="PROTECTED" isStatic="false" isFinal="false" isAbstract="false">
        <parameter name="poContext" dataType="ILifecycleContext" position="17" mode="INPUT"/>
        <parameter name="poParams" dataType="Progress.Lang.ParameterList" position="18" mode="INPUT"/>
        <parameter name="piOrder" dataType="INTEGER" position="19" mode="INPUT"/>
        <parameter name="poArgument" dataType="IParameter" position="20" mode="INPUT"/>
    </method>
    <method methodName="GetProvider" returnType="IProvider" signature="GetProvider(INPUT:Progress.Lang.Class,INPUT:Progress.Lang.Class):IProvider" modifier="PUBLIC" isStatic="true" isFinal="false" isAbstract="false">
        <comment>/** factory method for new IProvider instances **/</comment>
        <parameter name="poProviderType" dataType="Progress.Lang.Class" position="22" mode="INPUT"/>
        <parameter name="poImplementation" dataType="Progress.Lang.Class" position="23" mode="INPUT"/>
    </method>
    <property name="ProviderType" dataType="Progress.Lang.Class" isAbstract="false" isStatic="true" extent="0" modifier="PRIVATE" getModifier="PUBLIC" setModifier="PRIVATE"/>
    <property name="Type" dataType="Progress.Lang.Class" isAbstract="false" isStatic="false" extent="0" modifier="PUBLIC" getModifier="PUBLIC" setModifier="PRIVATE"/>
    <using name="OpenEdge.InjectABL.Binding.Parameters.IParameter" type="NONE"/>
    <using name="OpenEdge.InjectABL.Binding.Parameters.Parameter" type="NONE"/>
    <using name="OpenEdge.InjectABL.Binding.Parameters.Routine" type="NONE"/>
    <using name="OpenEdge.InjectABL.Lifecycle.StandardProvider" type="NONE"/>
    <using name="OpenEdge.InjectABL.Lifecycle.IProvider" type="NONE"/>
    <using name="OpenEdge.InjectABL.Lifecycle.ILifecycleContext" type="NONE"/>
    <using name="OpenEdge.Core.System.InvocationError" type="NONE"/>
    <using name="OpenEdge.Core.System.ArgumentError" type="NONE"/>
    <using name="OpenEdge.Core.RoutineTypeEnum" type="NONE"/>
    <using name="OpenEdge.Core.Collections.IIterator" type="NONE"/>
    <using name="OpenEdge.Core.DataTypeEnum" type="NONE"/>
    <using name="OpenEdge.Core.IOModeEnum" type="NONE"/>
    <using name="OpenEdge.Core.Assert" type="NONE"/>
    <using name="Progress.Lang.Class" type="NONE"/>
    <using name="Progress.Lang.ParameterList" type="NONE"/>
    <using name="Progress.Lang.AppError" type="NONE"/>
    <using name="Progress.Lang.SysError" type="NONE"/>
    <using name="Progress.Lang.Object" type="NONE"/>
</unit>
